{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/MenuComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/HomeComponent.js","components/ContactComponent.js","components/DishdetailComponent.js","components/AboutComponent.js","redux/actionCreators.js","redux/actionTypes.js","components/MainComponent.js","redux/promotions.js","redux/forms.js","redux/leaders.js","redux/dishes.js","redux/comments.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","react_default","a","createElement","className","baseUrl","RenderMenuItem","_ref","dish","onClick","Card","key","id","react_router_dom","to","concat","CardImg","width","src","image","alt","name","CardImgOverlay","CardTitle","Menu","props","menu","dishes","map","isLoading","LoadingComponent_Loading","errMess","Breadcrumb","BreadcrumbItem","active","Header","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isNavOpen","isModalOpen","toggleNav","bind","assertThisInitialized","toggleModal","handleLogin","setState","event","alert","username","value","password","remember","checked","preventDefault","_this2","Navbar","dark","expand","NavbarToggler","NavbarBrand","href","height","Collapse","isOpen","navbar","Nav","NavItem","Button","outline","Jumbotron","Modal","toggle","ModalHeader","ModalBody","Form","onSubmit","FormGroup","Label","htmlFor","Input","type","innerRef","input","check","color","Component","Footer","RenderCard","item","react_animation_components","in","transformProps","exitTransform","CardBody","designation","CardSubtitle","CardText","description","Home","dishesLoading","dishesErrMess","promotion","promoLoading","promoErrMess","leader","leadersLoading","leadersErrMess","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","values","postFeedback","console","log","JSON","stringify","resetFeedbackForm","role","lib","model","Row","md","Col","text","placeholder","validators","show","messages","size","offset","checkbox","select","textarea","rows","RenderDish","top","RenderComments","_ref2","comments","postComment","dishId","comment","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","CommentForm","rating","yourname","DishDetail","DishdetailComponent_CommentForm","RenderLeader","Media","left","body","heading","About","leaders","CardHeader","title","list","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosLoading","promosFailed","addPromos","promos","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","HeaderComponent","TransitionGroup","CSSTransition","location","classNames","timeout","react_router","path","component","HomeComponent","filter","featured","dishErrMess","promotions","promo","exact","AboutComponent","MenuComponent","match","DishdetailComponent","parseInt","params","commentsErrMess","ContactComponent","FooterComponent","withRouter","connect","dispatch","fetch","then","response","ok","error","Error","status","statusText","message","json","catch","actions","reset","newComment","toISOString","method","headers","Content-Type","credentials","feedback","newFeedback","objectSpread","Promotions","arguments","undefined","action","InitialFeedback","firstname","lastname","telnum","email","agree","contactType","Leaders","Dishes","Comments","store","createStore","combineReducers","createForms","applyMiddleware","thunk","logger","App","es","MainComponent","Boolean","window","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.32b84536.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return (\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n}","export const baseUrl = 'http://localhost:3001/';","import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nfunction RenderMenuItem({ dish, onClick }) {\r\n    return (\r\n        <Card key={dish.id}>\r\n            <Link to={`/menu/${dish.id}`}>\r\n                <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n                <CardImgOverlay>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                </CardImgOverlay>\r\n            </Link>\r\n        </Card>\r\n    );\r\n}\r\n\r\nconst Menu = (props) => {\r\n    const menu = props.dishes.dishes.map((dish) => {\r\n        return (\r\n            <div className=\"col-12 col-md-5 m-1\">\r\n                <RenderMenuItem dish={dish} />\r\n            </div>\r\n        )\r\n    });\r\n    if (props.dishes.isLoading) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.dishes.errMess) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <h4>{props.dishes.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem>\r\n                            <Link to=\"/home\">Home</Link>\r\n                        </BreadcrumbItem>\r\n                        <BreadcrumbItem active>\r\n                            <Link>Menu</Link>\r\n                        </BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Menu</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    {menu}\r\n                </div>\r\n            </div>\r\n        )\r\n}\r\n\r\n\r\n\r\nexport default Menu","import React, { Component } from 'react';\r\nimport {\r\n    Nav, Navbar, NavbarBrand, NavbarToggler, Collapse, NavItem, Jumbotron,\r\n    Button, Modal, ModalHeader, ModalBody, Form, FormGroup, Input, Label\r\n} from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isNavOpen: false,\r\n            isModalOpen: false\r\n        };\r\n\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);        \r\n    }\r\n\r\n    toggleNav() {\r\n        this.setState({\r\n            isNavOpen: !this.state.isNavOpen\r\n        });\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleLogin(event) {\r\n        this.toggleModal();\r\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\r\n            + \" Remember: \" + this.remember.checked);\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/\"><img src='assets/images/logo.png' height=\"30\" width=\"41\" alt='Ristorante Con Fusion' /></NavbarBrand>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to='/home'><span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to='/aboutus'><span className=\"fa fa-info fa-lg\"></span> About Us</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to='/menu'><span className=\"fa fa-list fa-lg\"></span> Menu</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to='/contactus'><span className=\"fa fa-address-card fa-lg\"></span> Contact Us</NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <Button outline onClick={this.toggleModal}><span className=\"fa fa-sign-in fa-lg\"></span> Login</Button>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n                <Jumbotron>\r\n                    <div className=\"container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <h1>Ristorante con Fusion</h1>\r\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                    innerRef={(input) => this.username = input} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                    innerRef={(input) => this.password = input} />\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\"\r\n                                        innerRef={(input) => this.remember = input} />\r\n                                    Remember me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Footer(props) {\r\n    return (\r\n        <div className=\"footer\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-4 offset-1 col-sm-2\">\r\n                        <h5>Links</h5>\r\n                        <ul className=\"list-unstyled\">\r\n                            <li><Link to='/home'>Home</Link></li>\r\n                            <li><Link to='/aboutus'>About Us</Link></li>\r\n                            <li><Link to='/menu'>Menu</Link></li>\r\n                            <li><Link to='/contactus'>Contact Us</Link></li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"col-7 col-sm-5\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                                confusion@food.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 align-self-center\">\r\n                        <div className=\"text-center\">\r\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                            <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-auto\">\r\n                        <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle } from 'reactstrap';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\nfunction RenderCard({ item, isLoading, errMess }) {\r\n    if (isLoading) {\r\n        return (\r\n            <Loading />\r\n        );\r\n    }\r\n    else if (errMess) {\r\n        return (\r\n            <h4>{errMess}</h4>\r\n        );\r\n    }\r\n    else\r\n        return (\r\n            <FadeTransform\r\n                in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n                <Card>\r\n                    <CardImg src={baseUrl + item.image} alt={item.name} />\r\n                    <CardBody>\r\n                        <CardTitle>{item.name}</CardTitle>\r\n                        {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null}\r\n                        <CardText>{item.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n        );\r\n\r\n}\r\n\r\nfunction Home(props) {\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-start\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.dish} isLoading={props.dishesLoading} errMess={props.dishesErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.promotion} isLoading={props.promoLoading} errMess={props.promoErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.leader} isLoading={props.leadersLoading} errMess={props.leadersErrMess} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col, Row } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, Form, Errors } from 'react-redux-form';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        this.props.postFeedback(values);\r\n        console.log('Current State is: ' + JSON.stringify(values));\r\n        alert('Current State is: ' + JSON.stringify(values));\r\n        this.props.resetFeedbackForm();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem>\r\n                            <Link to=\"/home\">Home</Link>\r\n                        </BreadcrumbItem>\r\n                        <BreadcrumbItem active>\r\n                            Contact Us\r\n                        </BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\" href=\"#\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us your Feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{ size: 6, offset: 2 }}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                            /> {' '}\r\n                                            <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{ size: 3, offset: 1 }}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{ size: 10, offset: 2 }}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                            </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","import React, { Component } from 'react';\r\nimport {\r\n    Card, CardImg, CardText, CardBody, CardTitle, Breadcrumb,\r\n    Modal, ModalBody, ModalHeader, BreadcrumbItem, Button, Label, Col, Row\r\n} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\n\r\nfunction RenderDish({ dish }) {\r\n    if (dish != null) {\r\n        return (\r\n            <FadeTransform\r\n                in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n                <Card>\r\n                    <CardImg top src={baseUrl + dish.image} alt={dish.name} />\r\n                    <CardBody>\r\n                        <CardTitle>{dish.name}</CardTitle>\r\n                        <CardText>{dish.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <div></div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction RenderComments({ comments, postComment, dishId }) {\r\n    return (\r\n        <Stagger in>\r\n            {comments.map((comment) => {\r\n                return (\r\n                    <Fade in>\r\n                        <li key={comment.id}>\r\n                            <p>{comment.comment}</p>\r\n                            <p>-- {comment.author} , {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit' }).format(new Date(Date.parse(comment.date)))}</p>\r\n                        </li>\r\n                    </Fade>\r\n                );\r\n            })}\r\n        </Stagger>\r\n        );\r\n}\r\nclass CommentForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isModalOpen: false\r\n        };\r\n    }\r\n\r\n    toggleModal = () => {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        })\r\n    }\r\n\r\n    handleSubmit = (values) => {\r\n        this.props.postComment(this.props.dishId, values.rating, values.yourname, values.comment);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Button onClick={this.toggleModal} type=\"submit\" color=\"primary\">\r\n                    Submit Comment\r\n            </Button>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Submit Commnet</ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"rating\" md={2}>Rating</Label>\r\n                                <Col md={10}>\r\n                                    <Control.select model=\".rating\" name=\"rating\"\r\n                                        className=\"form-control\">\r\n                                        <option>1</option>\r\n                                        <option>2</option>\r\n                                        <option>3</option>\r\n                                        <option>4</option>\r\n                                        <option>5</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"yourname\" md={2}>Your Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".yourname\" id=\"yourname\" name=\"yourname\"\r\n                                        placeholder=\"Your Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".yourname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"comment\" md={2}>Comment</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{ size: 10, offset: 2 }}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Submit\r\n                                </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst DishDetail = (props) => {\r\n    if (props.isLoading) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.errMess) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <h4>{props.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.dish != null)\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem>\r\n                            <Link to=\"/menu\">Menu</Link>\r\n                        </BreadcrumbItem>\r\n                        <BreadcrumbItem active>\r\n                            {props.dish.name}\r\n                        </BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>{props.dish.name}</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 col-md-5 m-1\">\r\n                        <RenderDish dish={props.dish} />\r\n                    </div>\r\n                    <div className=\"col-12 col-md-5 m-1\">\r\n                        <RenderComments comments={props.comments} />\r\n                        <CommentForm postComment={props.postComment} dishId={props.dish.id} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    else {\r\n        return (\r\n            <div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DishDetail","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { Fade, Stagger } from 'react-animation-components';\r\n\r\nfunction RenderLeader({ leader }) {\r\n    return (\r\n        <Media>\r\n            <Media left>\r\n                <Media src={baseUrl + leader.image} />\r\n            </Media>\r\n            <Media body>\r\n                <Media heading>\r\n                    {leader.name}\r\n                </Media>\r\n                <Media>\r\n                    {leader.designation}\r\n                </Media>\r\n                {leader.description}\r\n            </Media>\r\n        </Media>\r\n    );\r\n}\r\n\r\nfunction About(props) {\r\n\r\n    const leaders = props.leaders.map((leader) => {\r\n        return (\r\n            <Fade in>\r\n                <RenderLeader leader={leader} />\r\n            </Fade>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>About Us</h3>\r\n                    <hr />\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                    P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h2>Corporate Leadership</h2>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    {props.isLoading &&\r\n                        <Loading />}\r\n                    {props.errMess &&\r\n                        <h4>{props.errMess}</h4>}\r\n                    {props.leaders &&\r\n                        <Media list>\r\n                            <Stagger in>\r\n                                {leaders}\r\n                            </Stagger>\r\n                        </Media>\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;    ","import * as ActionTypes from './actionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    };\r\n    newComment.date = new Date().toISOString();\r\n\r\n    return fetch(baseUrl + 'comments', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            throw error;\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => dispatch(addComment(response)))\r\n        .catch(error => { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: ' + error.message); });\r\n};\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(dishes => dispatch(addDishes(dishes)))\r\n        .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\nexport const fetchComments = () => (dispatch) => {\r\n    return fetch(baseUrl + 'comments')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(comments => dispatch(addComments(comments)))\r\n        .catch(error => dispatch(commentsFailed(error.message)));\r\n};\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n\r\n    dispatch(promosLoading());\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(promos => dispatch(addPromos(promos)))\r\n        .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\nexport const leadersLoading = () => ({\r\n    type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addLeaders = (leaders) => ({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: leaders\r\n});\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n\r\n    dispatch(leadersLoading());\r\n\r\n    return fetch(baseUrl + 'leaders')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(promos => dispatch(addLeaders(promos)))\r\n        .catch(error => dispatch(leadersFailed(error.message)));\r\n}\r\n\r\nexport const addFeedback = (feedback) => ({\r\n    type: ActionTypes.ADD_FEEDBACK,\r\n    payload: feedback\r\n});\r\n\r\nexport const postFeedback = (feedback) => (dispatch) => {\r\n\r\n    const newFeedback = { ...feedback, date: new Date().toISOString() }\r\n\r\n    return fetch(baseUrl + 'feedback', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newFeedback),\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            throw error;\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => dispatch(addFeedback(response)))\r\n        .catch(error => { console.log('post feedback', error.message); alert('Your feedback could not be posted\\nError: ' + error.message); });\r\n};\r\n\r\n\r\n","export const ADD_COMMENT = 'ADD_COMMENT';\r\n\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\n\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\n\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\n\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\n\r\nexport const ADD_FEEDBACK = 'ADD_FEEDBACK';","import React, { Component } from 'react';\r\nimport Menu from './MenuComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport Home from './HomeComponent';\r\nimport Contact from './ContactComponent';\r\nimport DishDetail from './DishdetailComponent';\r\nimport About from './AboutComponent';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { postComment, fetchDishes, fetchComments, fetchPromos, fetchLeaders, postFeedback } from '../redux/actionCreators';\r\nimport { actions } from 'react-redux-form';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        dishes: state.dishes,\r\n        comments: state.comments,\r\n        leaders: state.leaders,\r\n        promotions: state.promotions\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    fetchDishes: () => { dispatch(fetchDishes()) },\r\n    resetFeedbackForm: () => { dispatch(actions.reset('feedback')) },\r\n    fetchComments: () => dispatch(fetchComments()),\r\n    fetchPromos: () => dispatch(fetchPromos()),\r\n    postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n    fetchLeaders: () => {dispatch(fetchLeaders())},\r\n    postFeedback: (feedback) => {dispatch(postFeedback(feedback))}\r\n})\r\n\r\nclass Main extends Component {\r\n    componentDidMount() {\r\n        this.props.fetchDishes();\r\n        this.props.fetchComments();\r\n        this.props.fetchPromos();\r\n        this.props.fetchLeaders();\r\n    }\r\n\r\n    render() {\r\n        const HomePage = () => {\r\n            return (\r\n                <Home\r\n                    dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n                    dishesLoading={this.props.dishes.isLoading}\r\n                    dishErrMess={this.props.dishes.errMess}\r\n                    promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n                    promoLoading={this.props.promotions.isLoading}\r\n                    promoErrMess={this.props.promotions.errMess}\r\n                    leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\r\n                    leadersLoading={this.props.leaders.isLoading}\r\n                    leadersErrMess={this.props.leaders.errMess}\r\n                />\r\n            );\r\n        }\r\n\r\n        const DishWithId = ({ match }) => {\r\n            return (\r\n                <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId, 10))[0]}\r\n                    isLoading={this.props.dishes.isLoading}\r\n                    errMess={this.props.dishes.errMess}\r\n                    comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId, 10))}\r\n                    commentsErrMess={this.props.comments.errMess}\r\n                    postComment={this.props.postComment}\r\n                />\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <TransitionGroup>\r\n                    <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n                        <Switch location={this.props.location}>\r\n                            <Route path='/home' component={HomePage} />\r\n                            <Route exact path='/aboutus' component={() => <About leaders={this.props.leaders.leaders} isLoading={this.props.leaders.isLoading} errMess={this.props.leaders.errMess} />} />} />\r\n                            <Route exact path='/menu' component={() => <Menu dishes={this.props.dishes} />} />\r\n                            <Route path='/menu/:dishId' component={DishWithId} />\r\n                            <Route exact path='/contactus' component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm} postFeedback={this.props.postFeedback} />} />\r\n                            <Redirect to=\"/home\" />\r\n                        </Switch>\r\n                    </CSSTransition>\r\n                </TransitionGroup>\r\n                <Footer />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","import * as ActionTypes from './actionTypes';\r\n\r\nexport const Promotions = (state = {\r\n    isLoading: true,\r\n    errMess: null,\r\n    promotions: []\r\n}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n            return { ...state, isLoading: false, errMess: null, promotions: action.payload };\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return { ...state, isLoading: true, errMess: null, promotions: [] }\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return { ...state, isLoading: false, errMess: action.payload };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n};","import * as ActionTypes from './actionTypes';\r\n\r\nexport const Leaders = (state = {\r\n    isLoading: true,\r\n    errMess: null,\r\n    leaders: []\r\n}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_LEADERS:\r\n            return { ...state, isLoading: false, errMess: null, leaders: action.payload };\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return { ...state, isLoading: true, errMess: null, leaders: [] };\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return { ...state, isLoading: false, errMess: action.payload, leaders: [] };\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './actionTypes';\r\n\r\nexport const Dishes = (state = {\r\n    isLoading: true,\r\n    errMess: null,\r\n    dishes: []\r\n}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return { ...state, isLoading: false, errMess: null, dishes: action.payload };\r\n        case ActionTypes.DISHES_LOADING:\r\n            return { ...state, isLoading: true, errMess: null, dishes: [] };\r\n        case ActionTypes.DISHES_FAILED:\r\n            return { ...state, isLoading: false, errMess: action.payload, dishes: [] };\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './actionTypes';\r\n\r\nexport const Comments = (state = { errMess: null, comments:[]}, action) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_COMMENTS:\r\n      return {...state, errMess: null, comments: action.payload};\r\n\r\n    case ActionTypes.COMMENTS_FAILED:\r\n      return {...state, errMess: action.payload};\r\n\r\n    case ActionTypes.ADD_COMMENT:\r\n        var comment = action.payload;\r\n        return { ...state, comments: state.comments.concat(comment)};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};","import React, { Component } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport Main from './components/MainComponent';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\nimport './App.css';\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div className=\"App\">\n            <Main />\n          </div>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { Promotions } from './promotions';\r\nimport { createForms } from 'react-redux-form';\r\nimport { InitialFeedback } from './forms';\r\nimport { Leaders } from './leaders';\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(combineReducers({\r\n        dishes: Dishes,\r\n        promotions: Promotions,\r\n        leaders: Leaders,\r\n        comments: Comments,\r\n        ...createForms({\r\n            feedback: InitialFeedback\r\n        })\r\n    }), applyMiddleware(thunk, logger)\r\n    );\r\n\r\n    return store;\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}